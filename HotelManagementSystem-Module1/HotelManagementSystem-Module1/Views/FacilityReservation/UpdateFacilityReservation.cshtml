@{
    Dictionary<int, string> namefacilityList = ViewBag.namefacilityList;
    Dictionary<int, string> existguestList = ViewBag.existguestList;
    Dictionary<string, string> currentRecord = ViewBag.currentRecord;
}

<div class="">
    <h4>Update Facility Reservation</h4>
    @if (ViewData["Message"] != null)
    {
        <div>success!</div>
    }
    else
    {
        <form asp-controller="FacilityReservation" asp-action="UpdateFacilityReservation" method="post" id="updateFacilityReservationForm" role="form" class="form form-horizontal">
            <div class="formdiv form-group">
                <label class="">Guest Name</label>
                <select id="guestId" name="guestId" class="form-select form-control" disabled="disabled">
                    @foreach (var item in existguestList)
                    {
                        if (@currentRecord["ReserveeId"] == item.Key.ToString())
                        {
                            <option value="@item.Key" selected>@item.Value</option>
                        }
                    }
                </select>
            </div>
            <div class="formdiv form-group">
                <label class="">Facility</label>
                <select id="facilityType" name="facilityType" class="form-select form-control" disabled="disabled">
                    @foreach (var item in namefacilityList)
                    {
                        if (@currentRecord["FacilityId"] == item.Key.ToString())
                        {
                            <option value="@item.Key" selected>@item.Value</option>
                        }
                        else
                        {
                            <option value="@item.Key">@item.Value</option>
                        }
                    }
                </select>
            </div>
            <div class="formdiv form-group">
                <label class="">Pax</label>
                <select id="pax" name="Pax" class="form-select form-control">
                        @for (var i = 1; i < 9; i++)
                            if (@currentRecord["Pax"] == @i.ToString())
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value=@i>@i</option>
                            }
                </select>
            </div>
            <div class="formdiv form-group">
                <label class="">Start Time</label>
                <input class=" form-control" type="hidden" value="@currentRecord["ReservationId"]" name="reservationId" />
                <input type="datetime-local" id="startTime" value="@currentRecord["StartTime"]" min="@currentRecord["StartTime"]" name="startTime">
                
            </div>
            <div class="formdiv form-group">
                <label class="">End Time</label>
                <input type="datetime-local" id="endTime" value="@currentRecord["EndTime"]" min="@currentRecord["EndTime"]" name="endTime">
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-secondary" id="submit" name="submit" value="Update" form="updateFacilityReservationForm">Update</button>
            </div>
        </form>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script type="text/javascript">
        $(document).ready(function () {
            $("#updateFacilityReservationForm").validate({
                rules: {
                    guestId: "required",
                    facilityType: {
                        required: true
                    },
                    pax: {
                        required: true
                    },
                    startTime: {
                        required: true,
                    },
                    endTime: {
                        required: true,
                    }
                },
                messages: {
                    guestId: "Please enter the guest name",
                    facilityType: {
                        required: "Please select a guest type"
                    },
                    pax: "Please enter a valid email address",
                    startTime: {
                        required: "Please provide a date",
                    },
                    endTime: {
                        required: "Please provide a date",
                    }
                },
                errorElement: "em",
                errorPlacement: function (error, element) {
                    // Add the `help-block` class to the error element
                    error.addClass("help-block");

                    if (element.prop("type") === "checkbox") {
                        error.insertAfter(element.parent("label"));
                    } else {
                        error.insertAfter(element);
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).parents(".formdiv").addClass("has-error").removeClass("has-success");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).parents(".formdiv").addClass("has-success").removeClass("has-error");
                }
            });
        });
        $.validator.setDefaults({
            submitHandler: function () {
                form.submit();
            }
        });
    </script>
}